{"version":3,"sources":["webpack:///./src/templates/blogs/categories.js","webpack:///./node_modules/react-feather/dist/icons/clock.js","webpack:///./src/templates/blogs/overview.js"],"names":["Categories","data","pageContext","posts","allMarkdownRemark","nodes","title","category","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Clock","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","displayName","BlogOverview","description","href","type","className","map","post","frontmatter","slug","fields","to","fluid","image","childImageSharp","alt","imageCredit","categories","item","index","kebabCase","style","boxShadow","date","timeToRead","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"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","file":"component---src-templates-blogs-categories-js-722f5714d705c95f00bb.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogOverview from \"./overview\"\n\nconst Categories = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <BlogOverview\n      title={`Posts about #${pageContext.category}`}\n      posts={posts}\n    ></BlogOverview>\n  )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      nodes {\n        excerpt\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 600, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          categories\n          imageCredit\n          description\n        }\n      }\n    }\n  }\n`\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar Clock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 6 12 12 16 14\"\n  }));\n});\nClock.displayName = 'Clock';\nexport default Clock;","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { Link } from \"gatsby\"\nimport { Calendar, Clock } from \"react-feather\"\nimport Img from \"gatsby-image\"\nimport {\n  ContainerLayout,\n  WorkPost,\n  Intro,\n  Title,\n  PostTitle,\n  Text,\n  HeaderIntro,\n  SubText,\n  SmallText,\n  UnderLink,\n  ReadMore,\n} from \"../../components/common\"\nimport { CategoryTags } from \"../../components/CategoriesTags\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst BlogOverview = ({ title, posts }) => {\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description=\"Blog posts based on various engineering, development and IT topics - including background information and practical tips.\"\n      />\n      <Intro>\n        <ContainerLayout>\n          <Title>Articles</Title>\n          <HeaderIntro>\n            <SubText>\n              Blog posts based on various engineering, development and IT\n              topics. Most of the time focused on software engineering - with\n              background information and practical tips from real projects. Many\n              of them are published on my{\" \"}\n              <a href=\"https://dev.to/davidkroell\">dev.to</a> page, too.\n            </SubText>\n            <CategoryTags type=\"blog\" />\n          </HeaderIntro>\n\n          <ContainerLayout className=\"wrapper\">\n            {posts.map(post => {\n              let title = post.frontmatter.title || post.frontmatter.slug\n\n              return (\n                <WorkPost key={post.fields.slug}>\n                  <div className=\"media\">\n                    <div className=\"image-wrapper\">\n                      <Link to={post.fields.slug}>\n                        <Img\n                          fluid={post.frontmatter.image.childImageSharp.fluid}\n                          title={title}\n                          alt={title + \" - Title Image\"}\n                        />\n                      </Link>\n                    </div>\n                    {post.frontmatter.imageCredit ? (\n                      <SmallText>\n                        Image credits:\n                        <UnderLink\n                          href={post.frontmatter.imageCredit}\n                          target=\"_blank\"\n                          title=\"Image credit link\"\n                        >\n                          {post.frontmatter.imageCredit}\n                        </UnderLink>\n                      </SmallText>\n                    ) : null}\n                  </div>\n\n                  <div className=\"content\">\n                    <header>\n                      <SmallText>\n                        <span className=\"align-middle\">\n                          {post.frontmatter.categories.map((item, index) => (\n                            <Link\n                              to={`/blog/categories/${kebabCase(item)}`}\n                              key={index}\n                            >\n                              <span className=\"align-middle text-primary text-underline\">\n                                #{item}{\" \"}\n                              </span>\n                            </Link>\n                          ))}{\" \"}\n                        </span>\n                      </SmallText>\n                      <PostTitle>\n                        <Link\n                          className=\"text-primary\"\n                          style={{ boxShadow: `none` }}\n                          to={post.fields.slug}\n                        >\n                          {title}\n                        </Link>\n                      </PostTitle>\n                      <SmallText>\n                        <Calendar\n                          className=\"align-middle text-primary\"\n                          width=\"18\"\n                          height=\"18\"\n                        />\n                        <span className=\"align-middle\">\n                          {post.frontmatter.date}\n                        </span>\n                      </SmallText>\n                      <SmallText>\n                        <Clock\n                          className=\"align-middle text-primary\"\n                          width=\"18\"\n                          height=\"18\"\n                        />\n                        <span className=\"align-middle\">\n                          {post.timeToRead} min read\n                        </span>\n                      </SmallText>\n                    </header>\n                    <Text\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                    />\n                    <Link to={post.fields.slug}>\n                      <ReadMore className=\"lined-link\">\n                        {\" \"}\n                        read more &#8594;{\" \"}\n                      </ReadMore>\n                    </Link>\n                  </div>\n                </WorkPost>\n              )\n            })}\n          </ContainerLayout>\n        </ContainerLayout>\n      </Intro>\n    </Layout>\n  )\n}\n\nexport default BlogOverview\n"],"sourceRoot":""}