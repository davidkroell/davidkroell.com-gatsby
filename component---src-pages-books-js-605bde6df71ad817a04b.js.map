{"version":3,"sources":["webpack:///./src/pages/books.js","webpack:///./node_modules/react-feather/dist/icons/thumbs-up.js","webpack:///./src/templates/books/overview.js"],"names":["BookIndex","books","data","allBooksJson","nodes","title","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ThumbsUp","_ref","ref","_ref$color","color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","BookOverview","categoryBasePath","categoryGroups","description","type","className","map","book","src","imagePath","alt","categories","item","index","to","kebabCase","author","readDate","dangerouslySetInnerHTML","__html","recommendetFor","href","link","rel"],"mappings":"2FAAA,4CASeA,UANG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,aAAaC,MAEhC,OAAO,kBAAC,IAAD,CAAcH,MAAOA,EAAOI,MAAM,Y,2GCN3C,SAASC,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAG9B,SAASS,EAAyBP,EAAQQ,GACxC,GAAc,MAAVR,EAAgB,MAAO,GAE3B,IAEIC,EAAKJ,EAFLD,EAkBN,SAAuCI,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EA9BMgB,CAA8BZ,EAAQQ,GAInD,GAAId,OAAOmB,sBAAuB,CAChC,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAEpD,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IACvCI,EAAMa,EAAiBjB,GACnBW,EAASG,QAAQV,IAAQ,GACxBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KACxDL,EAAOK,GAAOD,EAAOC,IAIzB,OAAOL,EAmBT,IAAIoB,EAAW,sBAAW,SAAUC,EAAMC,GACxC,IAAIC,EAAaF,EAAKG,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACjDE,EAAYJ,EAAKK,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAOhB,EAAyBU,EAAM,CAAC,QAAS,SAEpD,OAAoB,IAAMO,cAAc,MAAO/B,EAAS,CACtDyB,IAAKA,EACLO,MAAO,6BACPC,MAAOJ,EACPK,OAAQL,EACRM,QAAS,YACTC,KAAM,OACNC,OAAQV,EACRW,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfV,GAAoB,IAAMC,cAAc,OAAQ,CACjDU,EAAG,4HAGPlB,EAASmB,YAAc,WACR,Q,6CC+CAC,IAxGM,SAAC,GAAwD,IAAtD5C,EAAqD,EAArDA,MAAOJ,EAA8C,EAA9CA,MAA8C,EAAvCiD,iBAAuC,EAArBC,eACtD,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE9C,MAAOA,EACP+C,YAAY,oFAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,kTAQA,kBAAC,IAAD,CAAcC,KAAK,WAErB,kBAAC,IAAD,CAAiBC,UAAU,WACxBrD,EAAMsD,KAAI,SAAAC,GACT,OACE,kBAAC,IAAD,KACE,yBAAKF,UAAU,SACb,yBACEG,IAAKD,EAAKE,UACVlB,OAAQ,IACRmB,IAAKH,EAAKnD,MAAQ,YAItB,yBAAKiD,UAAU,WACb,gCACE,kBAAC,IAAD,KACE,0BAAMA,UAAU,gBACbE,EAAKI,WAAWL,KAAI,SAACM,EAAMC,GAAP,OACnB,kBAAC,OAAD,CACEC,GAAE,qBAAuBC,IAAUH,GACnC/C,IAAKgD,GAEL,0BAAMR,UAAU,4CAAhB,IACIO,EAAM,SAGV,MAIR,kBAAC,IAAD,KAAYL,EAAKnD,OACjB,kBAAC,IAAD,KAAWmD,EAAKS,QAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEX,UAAU,4BACVf,MAAM,KACNC,OAAO,OAET,0BAAMc,UAAU,gBAAgBE,EAAKU,YAIzC,kBAAC,IAAD,CACEC,wBAAyB,CACvBC,OAAQZ,EAAKJ,eAIjB,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEE,UAAU,4BACVf,MAAM,KACNC,OAAO,OAET,0BAAMc,UAAU,gBAAhB,oBAGF,kBAAC,IAAD,CACEa,wBAAyB,CACvBC,OAAQZ,EAAKa,kBAIjB,uBAAGC,KAAMd,EAAKe,KAAM9D,OAAO,SAAS+D,IAAI,cACtC,kBAAC,IAAD,CAAUlB,UAAU,cACjB,IADH,iBAEuB","file":"component---src-pages-books-js-605bde6df71ad817a04b.js","sourcesContent":["import React from \"react\"\nimport BookOverview from \"../templates/books/overview\"\n\nconst BookIndex = ({ data }) => {\n  const books = data.allBooksJson.nodes\n\n  return <BookOverview books={books} title=\"Books\" />\n}\n\nexport default BookIndex\n\nexport const pageQuery = graphql`\n  query {\n    allBooksJson(limit: 2000, sort: { order: DESC, fields: [readDate] }) {\n      nodes {\n        author\n        categories\n        description\n        imagePath\n        link\n        readDate\n        recommendetFor\n        title\n      }\n    }\n  }\n`\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ThumbsUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n  }));\n});\nThumbsUp.displayName = 'ThumbsUp';\nexport default ThumbsUp;","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { Link } from \"gatsby\"\nimport { Calendar, ThumbsUp } from \"react-feather\"\nimport {\n  ContainerLayout,\n  WorkPost,\n  Intro,\n  Title,\n  PostTitle,\n  Text,\n  HeaderIntro,\n  SubText,\n  SmallText,\n  SubTitle,\n  ReadMore,\n} from \"../../components/common\"\nimport { CategoryTags } from \"../../components/CategoriesTags\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst BookOverview = ({ title, books, categoryBasePath, categoryGroups }) => {\n  return (\n    <>\n      <Layout>\n        <SEO\n          title={title}\n          description=\"Some books I've read which in some way inspired me or I found very interesting.\"\n        />\n        <Intro>\n          <ContainerLayout>\n            <Title>Books</Title>\n\n            <HeaderIntro>\n              <SubText>\n                Listed below are all the books I remember reading and which are\n                worth mentioning here. I tried to quickly outline them and give\n                recommendations for people who might be interested in reading\n                them. This list is by far not complete neither will it ever be.\n                The links to the books are affiliate links.\n              </SubText>\n\n              <CategoryTags type=\"books\" />\n            </HeaderIntro>\n            <ContainerLayout className=\"wrapper\">\n              {books.map(book => {\n                return (\n                  <WorkPost>\n                    <div className=\"media\">\n                      <img\n                        src={book.imagePath}\n                        height={300}\n                        alt={book.title + \" image\"}\n                      />\n                    </div>\n\n                    <div className=\"content\">\n                      <header>\n                        <SmallText>\n                          <span className=\"align-middle\">\n                            {book.categories.map((item, index) => (\n                              <Link\n                                to={`/books/categories/${kebabCase(item)}`}\n                                key={index}\n                              >\n                                <span className=\"align-middle text-primary text-underline\">\n                                  #{item}{\" \"}\n                                </span>\n                              </Link>\n                            ))}{\" \"}\n                          </span>\n                        </SmallText>\n\n                        <PostTitle>{book.title}</PostTitle>\n                        <SubTitle>{book.author}</SubTitle>\n\n                        <SmallText>\n                          <Calendar\n                            className=\"align-middle text-primary\"\n                            width=\"18\"\n                            height=\"18\"\n                          />\n                          <span className=\"align-middle\">{book.readDate}</span>\n                        </SmallText>\n                      </header>\n\n                      <Text\n                        dangerouslySetInnerHTML={{\n                          __html: book.description,\n                        }}\n                      />\n\n                      <SmallText>\n                        <ThumbsUp\n                          className=\"align-middle text-primary\"\n                          width=\"18\"\n                          height=\"18\"\n                        />\n                        <span className=\"align-middle\">Recommendet for</span>\n                      </SmallText>\n\n                      <Text\n                        dangerouslySetInnerHTML={{\n                          __html: book.recommendetFor,\n                        }}\n                      />\n\n                      <a href={book.link} target=\"_blank\" rel=\"noreferrer\">\n                        <ReadMore className=\"lined-link\">\n                          {\" \"}\n                          get the book &#8594;{\" \"}\n                        </ReadMore>\n                      </a>\n                    </div>\n                  </WorkPost>\n                )\n              })}\n            </ContainerLayout>\n          </ContainerLayout>\n        </Intro>\n      </Layout>\n    </>\n  )\n}\n\nexport default BookOverview\n"],"sourceRoot":""}